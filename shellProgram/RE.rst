正则表达式与模式匹配
========================


正则表达式和它的元字符
------------------

正则表达式（regular expression，RE）是一种字符模式，用于在查找过程中匹配指定的字符，正则表达式通常被置于两个正斜杠之间，如：/love/，它将匹配地查找文本中任何位置出现的相同模式。正则表达式
的强大之处在于，它提供了一些特殊字符，使得字符模式可以灵活地、多样化地匹配各种各样的文本信息。正则表达式是好多UNIX/Linux工具的基础，如vi、grep、awk、sed等。

元字符表达的是不同于字面本身的含义。UNIX/Linux系统里有两种元字符，一种是shel元字符，由shell来解析，如：rm *;这里shell把shell元字符*解析为“匹配当前工作目录下的所有文件名“；一种是正则表达
式元字符，是由各种执行模式匹配操作的程序来解析，如vi、grep、awk、sed等。基本的正则表达式元字符有：

+--------+--------------------------+------------+---------------------------------------------+
| 元字符 |       功能               |   示例     |  匹配对象                                   |
+========+==========================+============+=============================================+
|   ^    | 行首定位符               | /^love/    |  匹配所有以love开头的行                     |
+--------+--------------------------+------------+---------------------------------------------+
|   $    | 行尾定位符               | /love$/    |  匹配所有以love结尾的行                     |
+--------+--------------------------+------------+---------------------------------------------+
|   .    | 匹配单个字符             | /l..e/     |  匹配包含一个l，后跟两个字符，再跟一个e的行 |
+--------+--------------------------+------------+---------------------------------------------+
|   *    | 匹配0或多个前置字符      | /*love/    |  匹配包含跟在0个或多个空格后的模式love的行  |
+--------+--------------------------+------------+---------------------------------------------+
|   []   | 匹配一组字符中的任一个   | /[Ll]ove/  |  匹配包含love或Love的行                     |
+--------+--------------------------+------------+---------------------------------------------+
|  [x-y  | 匹配指定范围内的一个字符 | /[A-Z]ove/ |  匹配后面跟着ove的一个A至Z之间的字符        |
+--------+--------------------------+------------+---------------------------------------------+
|  [^]   | 匹配不在指定组内的字符   | /[^A-Z]/   |  匹配不在范围A至Z之间的任意一个字符         |
+--------+--------------------------+------------+---------------------------------------------+
|   \    | 用来转义元字符           | /love\./   |  匹配一个包含love.的行，.被转义成为普通字符 |
+--------+--------------------------+------------+---------------------------------------------+
|                                    扩展的正则表达式                                          |
+--------+--------------------------+------------+---------------------------------------------+
|  \<    | 词首定位符               | /\<love/   |  匹配以love开头的词的行（vi，grep）         |
+--------+--------------------------+------------+---------------------------------------------+
|  \>    | 词尾定位符               | /love\>/   |  匹配以love结尾的词的行（vi，grep）         |
+--------+--------------------------+------------+---------------------------------------------+
| \(..\) | 匹配可动态引用的字符标签 | \(a\)\ \1/ |  最多可以使用9个标签   （sed，vi，grep      |
+--------+--------------------------+------------+---------------------------------------------+
| x\{m\} | 字符重复出现m次          | /o\{5\}/   |  匹配5个o的行                               |
+--------+--------------------------+------------+---------------------------------------------+
| x\{m,\}| 字符重复出现至少m次      | /o\{5,\}/  |  匹配5个以上o的行                           |
+--------+--------------------------+------------+---------------------------------------------+
|x\{m,n\}| 字符重复出现m-n次        | /o\{5,10\}/|  匹配5个-10个o的行                          |
+--------+--------------------------+------------+---------------------------------------------+

正则表达使用示例
-----------------

::

    vi example
    ------------------------------------------------------------
    I had a lovely time on our little picnic.
    Lovers were all around us. It is springtime. Oh
    love, how much I adore yu. Do you know
    the extent of my love? Oh, by the way, I think
    I lost my gloves somewhere out in that field of
    clover. Did you see them? I can only hope love
    is forever. I live for you. It's hard to get back in th 
    groove.

    /love/ 
    /^love/
    /love$/
    /l.ve/
    /o*ve/              
    /[Ll]ove/
    /ove[a-z]/
    /ove[^a-zA-z0-9]/

::

    vi example2
    ---------------------------------------------------------------
    |Christian Scott lives here and will put on a Christmas party. |
    |There are around 30 to 35 people invited.                     |
    |They are:                                                     |
    |                                                           Tom|
    |Dan
    |    Rhonda Savage
    |Nicky and Kimberly.
    |Steve, Suzanne, Ginger and Larry.

    /^[A-Z]..$/
    /^[A-Z][a-z ]*3[0-5]/
    /[a-z]*\./
    /^ *[A-Z][a-z][a-z]&/
    /^[A-Za-z]*[^,][A-Za-z]*$/

::
    vi example3
    ------------------------------------------------------------------------
    Unusual occurrences happened at the fair.
     Pattty won fourth place in the 50 yard dash square and fair.
    Occurrences like this are rare.
    The winning ticket is 55222.
    The ticket I got is 54333 and Dee got 55544.
    Guy fell down while running around the south bend in his last event.

    /\<fourth\>/
    /\<f.*th\>/
    :1,$s/\([Oo]ccur\)ence/\1rence/
    :s/\(square\) and \(fair\)/\2 and \1
    /5\{2\}2\{3\}\./